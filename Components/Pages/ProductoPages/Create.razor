@page "/productos/create"
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize(Roles = "admin")]
@using Microsoft.EntityFrameworkCore
@using Restaurante.Data.Modelos
@inject IDbContextFactory<Restaurante.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Crear</h1>

<h2>Producto</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Producto" OnValidSubmit="AddProducto" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre:</label> 
                <InputText id="nombre" @bind-Value="Producto.Nombre" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Producto.Nombre" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="precio" class="form-label">Precio:</label> 
                <InputNumber id="precio" @bind-Value="Producto.Precio" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Producto.Precio" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="codigo" class="form-label">Codigo:</label> 
                <InputText id="codigo" @bind-Value="Producto.Codigo" class="form-control" /> 
                <ValidationMessage For="() => Producto.Codigo" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="categoriaid" class="form-label">CategoriaId:</label> 
                <InputNumber id="categoriaid" @bind-Value="Producto.CategoriaId" class="form-control" /> 
                <ValidationMessage For="() => Producto.CategoriaId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/productos">Regresar a la lista</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Producto Producto { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProducto()
    {
        using var context = DbFactory.CreateDbContext();
        context.Productos.Add(Producto);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/productos");
    }
}
